{
  "name": "sphere-node-connect",
  "description": "Quick and easy way to connect your Node.js app with SPHERE.IO.",
  "version": "0.2.4",
  "keywords": [
    "sphere",
    "api",
    "connect",
    "oauth",
    "oauth2"
  ],
  "homepage": "https://github.com/emmenko/sphere-node-connect",
  "author": {
    "name": "Nicola Molinari",
    "email": "nicola.molinari@commercetools.de"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/emmenko/sphere-node-connect.git"
  },
  "bugs": {
    "url": "https://github.com/emmenko/sphere-node-connect/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/emmenko/sphere-node-connect/blob/master/LICENSE-MIT"
    }
  ],
  "main": "main.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt coverage"
  },
  "dependencies": {
    "randomstring": "~1.0.x",
    "request": "~2.33.0",
    "underscore": "~1.5.2"
  },
  "devDependencies": {
    "coveralls": "~2.1.0",
    "grunt": "~0.4.1",
    "grunt-bump": "~0.0.11",
    "grunt-coffeelint": "~0.0.7",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-shell": "~0.5.0",
    "istanbul": "~0.1.46",
    "jasmine-node": "~1.11.0"
  },
  "readme": "# sphere-node-connect \n\n[![Build Status](https://secure.travis-ci.org/emmenko/sphere-node-connect.png?branch=master)](http://travis-ci.org/emmenko/sphere-node-connect) [![NPM version](https://badge.fury.io/js/sphere-node-connect.png)](http://badge.fury.io/js/sphere-node-connect) [![Coverage Status](https://coveralls.io/repos/emmenko/sphere-node-connect/badge.png?branch=master)](https://coveralls.io/r/emmenko/sphere-node-connect?branch=master) [![Dependency Status](https://gemnasium.com/emmenko/sphere-node-connect.png)](https://gemnasium.com/emmenko/sphere-node-connect)\n\nQuick and easy way to connect your Node.js app with [SPHERE.IO](http://sphere.io).\n\n## Getting Started\nInstall the module with: `npm install sphere-node-connect`\n\n```javascript\nvar sphere_connect = require('sphere-node-connect');\nvar oa = sphere_connect.OAuth2;\nvar rest = sphere_connect.Rest;\n```\n\n## Documentation\nThe connector exposes 2 objects: `OAuth2` and `Rest`.\n\nThe `OAuth2` is used to retrieve an `access_token`\n\n```javascript\nvar oa = new OAuth2({\n  config: {\n    client_id: \"\",\n    client_secret: \"\",\n    project_key: \"\"\n  },\n  host: \"auth.sphere.io\", // optional\n  accessTokenUrl: \"/oauth/token\" // optional,\n  timeout: 20000, // optional\n  rejectUnauthorized: true // optional\n});\noa.getAccessToken(callback)\n```\n\nThe `Rest` is used to comunicate with the HTTP API.\n\n```javascript\nvar rest = new Rest({\n  config: {\n    client_id: \"\",\n    client_secret: \"\",\n    project_key: \"\"\n  },\n  host: \"api.sphere.io\", // optional\n  access_token: \"\", // optional (if not provided it will automatically retrieve an access_token)\n  timeout: 20000, // optional\n  rejectUnauthorized: true, // optional\n  oauth_host: \"auth.sphere.io\" // optional (used when retrieving the access_token internally) \n  user_agent: 'my client v0.1' // optional\n});\n\nrest.GET(resource, callback)\nrest.POST(resource, payload, callback)\n```\n\nThe `Rest` object, when instantiated, has an internal instance of the `OAuth` module accessible with `rest._oauth`. This is mainly used internally to automatically retrieve an `access_token`.\n\nCurrently `GET`, `POST` and `DELETE` are supported.\n\n\n## Examples\n```javascript\noa.getAccessToken(function(error, response, body){\n  if (response.statusCode is 200) {\n    var data = JSON.parse(body);\n    var access_token = data.access_token;\n  } else\n    throw new Error(\"Failed to get Access Token.\")\n})\n```\n\n```javascript\n// Get a list of all products\nrest.GET(\"/products\", function(error, response, body){\n  var data = JSON.parse(body);\n  console.log(data);\n});\n\n// Create a new product\nrest.POST(\"/products\", {\n  name: { en: \"Foo\" },\n  slug: { en: \"foo\" },\n  productType: { id: \"123\", typeId: \"product-type\" }\n}, function(error, response, body){\n  var data = JSON.parse(body);\n  console.log(data);\n});\n\n// Update a product\nrest.POST(\"/products/123\", {\n  version: 1,\n  actions: [\n    { action: \"changeName\", name: { en: \"Boo\" } }\n  ]\n}, function(error, response, body){\n  var data = JSON.parse(body);\n  console.log(data);\n});\n\n// Delete a product\nrest.DELETE(\"/product/abc?version=3\", function(error, response, body) {\n  if (response.statusCode == 200) {\n    console.log(\"Product successfully deleted.\");\n  } else if (response.statusCode == 404) {\n    console.log(\"Product does not exist.\");\n  } else if (response.statusCode == 400) {\n    console.log(\"Product version does not match.\");\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nDefine your SPHERE.IO credentials into a `config.js`. Since the tests run against 2 projects on different environments you need to provide the credentials for both. If you just have one project You can provide the same credentials for both. \n\n```javascript\n/* SPHERE.IO credentials */\nexports.config = {\n  staging: {\n    client_id: \"\",\n    client_secret: \"\",\n    project_key: \"\",\n    oauth_host: \"auth.sphere.io\",\n    api_host: \"api.sphere.io\"\n  },\n  prod: {\n    client_id: \"\",\n    client_secret: \"\",\n    project_key: \"\",\n    oauth_host: \"auth.sphere.io\",\n    api_host: \"api.sphere.io\"\n  }\n}\n```\n\n## Releasing\nReleasing a new version is completely automated using the Grunt task `grunt release`.\n\n```javascript\ngrunt release // patch release\ngrunt release:minor // minor release\ngrunt release:major // major release\n```\n\n## License\nCopyright (c) 2013 Nicola Molinari\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "sphere-node-connect@0.2.4",
  "_from": "sphere-node-connect@~0.2.2"
}
